Open powershell as administrator and run:

Get-WindowsCapability -Online | Where-Object Name -like 'OpenSSH*'

to check which openssh you have (client or server or both)

Install it with:

# Install the OpenSSH Client
Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0

# Install the OpenSSH Server
Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0

Then start the service and set as Automatic

# Start the sshd service
Start-Service sshd

# OPTIONAL but recommended:
Set-Service -Name sshd -StartupType 'Automatic'


Finally 
# Confirm the Firewall rule is configured. It should be created automatically by setup. Run the following to verify


if (!(Get-NetFirewallRule -Name "OpenSSH-Server-In-TCP" -ErrorAction SilentlyContinue | Select-Object Name, Enabled)) {
    Write-Output "Firewall Rule 'OpenSSH-Server-In-TCP' does not exist, creating it..."
    New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22
} else {
    Write-Output "Firewall rule 'OpenSSH-Server-In-TCP' has been created and exists."
}


you can just copy all this long code and paste it in powershell
PowerShell will recognize it as a multiterm command (that will start with '>>'). Then press enter 

If everything went fine then you will get the message:

"Firewall rule 'OpenSSH-Server-In-TCP' has been created and exists."


Finally you can connect as usual:

ssh username@servername
